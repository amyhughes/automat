{
  "Parameters": {
    "Stack": {
      "Type": "String",
      "Default": "frontend"
    },
    "Stage": {
      "Type": "String",
      "Default": "PROD"
    },
    "App": {
      "Type": "String",
      "Default": "automat-api"
    },
    "AMI": {
      "Type": "String",
      "Description": "AMI ID to be provded by RiffRafff"
    }
  },
  "Resources": {
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/Resource"
      }
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PublicSubnet1"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet1/Subnet"
      }
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PublicSubnet1"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet1/RouteTable"
      }
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PublicSubnet1"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet1/EIP"
      }
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        },
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PublicSubnet1"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet1/NATGateway"
      }
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PublicSubnet2"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet2/Subnet"
      }
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PublicSubnet2"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet2/RouteTable"
      }
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "VPCPublicSubnet2EIP4947BC00": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PublicSubnet2"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet2/EIP"
      }
    },
    "VPCPublicSubnet2NATGateway3C070193": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        },
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PublicSubnet2"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PublicSubnet2/NATGateway"
      }
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PrivateSubnet1"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PrivateSubnet1/Subnet"
      }
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PrivateSubnet1"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PrivateSubnet1/RouteTable"
      }
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PrivateSubnet2"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PrivateSubnet2/Subnet"
      }
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC/PrivateSubnet2"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PrivateSubnet2/RouteTable"
      }
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet2NATGateway3C070193"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/VPC"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/VPC/VPCGW"
      }
    },
    "automatelasticsearch": {
      "Type": "AWS::Elasticsearch::Domain",
      "Properties": {
        "AccessPolicies": {},
        "DomainName": "automat-elasticsearch-PROD",
        "ElasticsearchClusterConfig": {
          "InstanceCount": 1,
          "InstanceType": "r5.large.elasticsearch"
        },
        "ElasticsearchVersion": "7.4",
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/automat-elasticsearch"
      }
    },
    "roll9AE24C80": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "es:*",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "automatelasticsearch",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::aws-frontend-artifacts/*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "instancePolicy"
          }
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/roll/Resource"
      }
    },
    "ASGInstanceSecurityGroup0525485D": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "automat-api/ASG/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "Value": "automat-api/ASG"
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/ASG/InstanceSecurityGroup/Resource"
      }
    },
    "ASGInstanceSecurityGroupfromautomatapiLBSecurityGroup4548FB9E808A4ACFD2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ASGInstanceSecurityGroup0525485D",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/ASG/InstanceSecurityGroup/from automatapiLBSecurityGroup4548FB9E:80"
      }
    },
    "ASGInstanceProfile0A2834D7": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "roll9AE24C80"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/ASG/InstanceProfile"
      }
    },
    "ASGLaunchConfigC00AF12B": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "AMI"
        },
        "InstanceType": "a1.medium",
        "IamInstanceProfile": {
          "Ref": "ASGInstanceProfile0A2834D7"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ASGInstanceSecurityGroup0525485D",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\naws --region eu-west-1 s3 cp s3://aws-frontend-artifacts/PROD/automat/automat_1.0-SNAPSHOT_all.deb /tmp\ndpkg -i /tmp/janus_1.0-SNAPSHOT_all.deb"
        }
      },
      "DependsOn": [
        "roll9AE24C80"
      ],
      "Metadata": {
        "aws:cdk:path": "automat-api/ASG/LaunchConfig"
      }
    },
    "ASG46ED3070": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "ASGLaunchConfigC00AF12B"
        },
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "automat-api/ASG"
          },
          {
            "Key": "Owner",
            "PropagateAtLaunch": true,
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "Stage"
            }
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "LBListenerTargetGroupF04FCF6D"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
          },
          {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/ASG/ASG"
      }
    },
    "ASGScalingPolicyGT80CPUD8CC7169": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ASG46ED3070"
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ASGAverageCPUUtilization"
          },
          "TargetValue": 80
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/ASG/ScalingPolicyGT80CPU/Resource"
      }
    },
    "LB8A12904C": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LBSecurityGroup8A41EA2B",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "VPCPublicSubnet1SubnetB4246D30"
          },
          {
            "Ref": "VPCPublicSubnet2Subnet74179F39"
          }
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet2DefaultRouteB7481BBA"
      ],
      "Metadata": {
        "aws:cdk:path": "automat-api/LB/Resource"
      }
    },
    "LBSecurityGroup8A41EA2B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB automatapiLB5B22C249",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/LB/SecurityGroup/Resource"
      }
    },
    "LBSecurityGrouptoautomatapiASGInstanceSecurityGroup9E12140D80153233A0": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ASGInstanceSecurityGroup0525485D",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/LB/SecurityGroup/to automatapiASGInstanceSecurityGroup9E12140D:80"
      }
    },
    "LBListener49E825B4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "LBListenerTargetGroupF04FCF6D"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LB8A12904C"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/LB/Listener/Resource"
      }
    },
    "LBListenerTargetGroupF04FCF6D": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": {
              "Ref": "App"
            }
          },
          {
            "Key": "Owner",
            "Value": "automat"
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "Stack"
            }
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            }
          }
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "automat-api/LB/Listener/TargetGroup/Resource"
      }
    }
  }
}